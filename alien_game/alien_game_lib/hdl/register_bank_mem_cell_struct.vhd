-- VHDL Entity alien_game_lib.register_bank_mem_cell.symbol
--
-- Created:
--          by - cvalzu.UNKNOWN (HTC219-306-SPC)
--          at - 20:42:25  6.04.2025
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY register_bank_mem_cell IS
   PORT( 
      clk         : IN     std_logic;
      color_in    : IN     std_logic_vector (23 DOWNTO 0);
      nullify     : IN     std_logic;
      rst_n       : IN     std_logic;
      write_ready : IN     std_logic;
      color_out   : OUT    std_logic_vector (23 DOWNTO 0)
   );

-- Declarations

END register_bank_mem_cell ;

--
-- VHDL Architecture alien_game_lib.register_bank_mem_cell.struct
--
-- Created:
--          by - cvalzu.UNKNOWN (HTC219-306-SPC)
--          at - 20:42:22  6.04.2025
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ARCHITECTURE struct OF register_bank_mem_cell IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL dout  : std_logic_vector(23 DOWNTO 0);
   SIGNAL dout1 : std_logic_vector(23 DOWNTO 0);
   SIGNAL dout2 : std_logic_vector(23 DOWNTO 0);

   -- Implicit buffer signal declarations
   SIGNAL color_out_internal : std_logic_vector (23 DOWNTO 0);


   -- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'adff'
   SIGNAL mw_U_0reg_cval : std_logic_vector(23 DOWNTO 0);


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_0' of 'adff'
   color_out_internal <= mw_U_0reg_cval;
   u_0seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_0reg_cval <= "000000000000000000000000";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_0reg_cval <= dout1;
      END IF;
   END PROCESS u_0seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_3' of 'constval'
   dout2 <= "000000000000000000000000";

   -- ModuleWare code(v1.12) for instance 'U_1' of 'mux'
   u_1combo_proc: PROCESS(color_out_internal, color_in, write_ready)
   BEGIN
      CASE write_ready IS
      WHEN '0' => dout <= color_out_internal;
      WHEN '1' => dout <= color_in;
      WHEN OTHERS => dout <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_1combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_2' of 'mux'
   u_2combo_proc: PROCESS(dout, dout2, nullify)
   BEGIN
      CASE nullify IS
      WHEN '0' => dout1 <= dout;
      WHEN '1' => dout1 <= dout2;
      WHEN OTHERS => dout1 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_2combo_proc;

   -- Instance port mappings.

   -- Implicit buffered output assignments
   color_out <= color_out_internal;

END struct;

-- VHDL Entity alien_game_lib.coordinate.symbol
--
-- Created:
--          by - cvalzu.UNKNOWN (HTC219-314-SPC)
--          at - 15:55:44 13.02.2025
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY coordinate IS
   PORT( 
      alien_direction : IN     std_logic;
      clk             : IN     std_logic;
      enable          : IN     std_logic;
      rst_n           : IN     std_logic;
      x               : OUT    std_logic_vector (7 DOWNTO 0);
      y               : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END coordinate ;

--
-- VHDL Architecture alien_game_lib.coordinate.struct
--
-- Created:
--          by - cvalzu.UNKNOWN (HTC219-313-SPC)
--          at - 20:07:07 17.04.2025
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF coordinate IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL dout  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout1 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout2 : std_logic_vector(7 DOWNTO 0);
   SIGNAL q     : std_logic_vector(7 DOWNTO 0);

   -- Implicit buffer signal declarations
   SIGNAL x_internal : std_logic_vector (7 DOWNTO 0);


   -- ModuleWare signal declarations(v1.12) for instance 'U_3' of 'adff'
   SIGNAL mw_U_3reg_cval : std_logic_vector(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_1' of 'fixshift'
   SIGNAL mw_U_1temp_dout : std_logic_vector(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_2' of 'fixshift'
   SIGNAL mw_U_2temp_dout : std_logic_vector(7 DOWNTO 0);

   -- Component Declarations
   COMPONENT move_alien
   PORT (
      clk : IN     std_logic ;
      rst : IN     std_logic ;
      y   : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : move_alien USE ENTITY alien_game_lib.move_alien;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_3' of 'adff'
   q <= mw_U_3reg_cval;
   u_3seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_3reg_cval <= "10000000";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_3reg_cval <= dout;
      END IF;
   END PROCESS u_3seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_1' of 'fixshift'
   dout2 <= mw_U_1temp_dout;
   u_1combo_proc: PROCESS (q)
   BEGIN
      mw_U_1temp_dout <= (OTHERS => '0');
      mw_U_1temp_dout(6 DOWNTO 0) <= q(7 + 0 DOWNTO 1 + 0);
   END PROCESS u_1combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_2' of 'fixshift'
   dout1 <= mw_U_2temp_dout;
   u_2combo_proc: PROCESS (q)
   BEGIN
      mw_U_2temp_dout <= (OTHERS => '0');
      mw_U_2temp_dout(7 DOWNTO 1) <= q(6 + 0 DOWNTO 0);
   END PROCESS u_2combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_0' of 'mux'
   u_0combo_proc: PROCESS(q, x_internal, enable)
   BEGIN
      CASE enable IS
      WHEN '0' => dout <= q;
      WHEN '1' => dout <= x_internal;
      WHEN OTHERS => dout <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_0combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_4' of 'mux'
   u_4combo_proc: PROCESS(dout1, dout2, alien_direction)
   BEGIN
      CASE alien_direction IS
      WHEN '0' => x_internal <= dout1;
      WHEN '1' => x_internal <= dout2;
      WHEN OTHERS => x_internal <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_4combo_proc;

   -- Instance port mappings.
   U_5 : move_alien
      PORT MAP (
         clk => clk,
         rst => rst_n,
         y   => y
      );

   -- Implicit buffered output assignments
   x <= x_internal;

END struct;

-- VHDL Entity alien_game_lib.alien_hp2.symbol
--
-- Created:
--          by - cvalzu.UNKNOWN (HTC219-310-SPC)
--          at - 12:57:41 23.04.2025
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY alien_hp2 IS
   PORT( 
      clk     : IN     std_logic;
      hit_in  : IN     std_logic;
      rst     : IN     std_logic;
      clr_out : OUT    std_logic_vector (3 DOWNTO 0)
   );

-- Declarations

END alien_hp2 ;

--
-- VHDL Architecture alien_game_lib.alien_hp2.struct
--
-- Created:
--          by - cvalzu.UNKNOWN (HTC219-310-SPC)
--          at - 13:16:59 23.04.2025
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ARCHITECTURE struct OF alien_hp2 IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL dout : std_logic_vector(3 DOWNTO 0);
   SIGNAL q    : std_logic_vector(3 DOWNTO 0);

   -- Implicit buffer signal declarations
   SIGNAL clr_out_internal : std_logic_vector (3 DOWNTO 0);


   -- ModuleWare signal declarations(v1.12) for instance 'U_1' of 'adff'
   SIGNAL mw_U_1reg_cval : std_logic_vector(3 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'fixshift'
   SIGNAL mw_U_0temp_dout : std_logic_vector(3 DOWNTO 0);


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_1' of 'adff'
   q <= mw_U_1reg_cval;
   u_1seq_proc: PROCESS (clk, rst)
   BEGIN
      IF (rst = '1') THEN
         mw_U_1reg_cval <= "0001";
      ELSIF (RISING_EDGE(clk)) THEN
         mw_U_1reg_cval <= clr_out_internal;
      END IF;
   END PROCESS u_1seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_0' of 'fixshift'
   dout <= mw_U_0temp_dout;
   u_0combo_proc: PROCESS (q)
   BEGIN
      mw_U_0temp_dout <= (OTHERS => '0');
      mw_U_0temp_dout(3 DOWNTO 1) <= q(2 + 0 DOWNTO 0);
   END PROCESS u_0combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_2' of 'mux'
   u_2combo_proc: PROCESS(q, dout, hit_in)
   BEGIN
      CASE hit_in IS
      WHEN '0' => clr_out_internal <= q;
      WHEN '1' => clr_out_internal <= dout;
      WHEN OTHERS => clr_out_internal <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_2combo_proc;

   -- Instance port mappings.

   -- Implicit buffered output assignments
   clr_out <= clr_out_internal;

END struct;

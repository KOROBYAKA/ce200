-- VHDL Entity tb_lib.tb_write_sequencer.symbol
--
-- Created:
--          by - kayra.UNKNOWN (HTC219-304-SPC)
--          at - 11:25:06 09/18/19
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY tb_write_sequencer IS
-- Declarations

END tb_write_sequencer ;

--
-- VHDL Architecture tb_lib.tb_write_sequencer.struct
--
-- Created:
--          by - txdava.UNKNOWN (HTC219-315-SPC)
--          at - 13:20:37 18.03.2025
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;
LIBRARY tb_lib;

ARCHITECTURE struct OF tb_write_sequencer IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL alien_coord_const : std_logic_vector(7 DOWNTO 0);
   SIGNAL clk               : std_logic;
   SIGNAL dout              : std_logic;
   SIGNAL enable            : std_logic;
   SIGNAL gun_px_idx        : std_logic_vector(1 DOWNTO 0);
   SIGNAL module_select     : std_logic_vector(1 DOWNTO 0);
   SIGNAL rst_n             : std_logic;
   SIGNAL simulation_ends   : std_logic;
   SIGNAL wr_done           : std_logic;
   SIGNAL write             : std_logic;
   SIGNAL write_ready       : std_logic;


   -- Component Declarations
   COMPONENT write_sequencer
   PORT (
      alien_defeated : IN     std_logic ;
      clk            : IN     std_logic ;
      rst_n          : IN     std_logic ;
      write_ready    : IN     std_logic ;
      enable         : OUT    std_logic ;
      frame_done     : OUT    std_logic ;
      gun_px_idx     : OUT    std_logic_vector (1 DOWNTO 0);
      module_select  : OUT    std_logic_vector (1 DOWNTO 0);
      write          : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT wr_seq_tester
   PORT (
      enable          : IN     std_logic;
      simulation_ends : IN     std_logic;
      wr_done         : IN     std_logic;
      write           : IN     std_logic;
      clk             : OUT    std_logic;
      rst_n           : OUT    std_logic;
      write_ready     : OUT    std_logic
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : wr_seq_tester USE ENTITY tb_lib.wr_seq_tester;
   FOR ALL : write_sequencer USE ENTITY alien_game_lib.write_sequencer;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'alien_coord_const' of 'constval'
   alien_coord_const <= "00000001";

   -- ModuleWare code(v1.12) for instance 'alien_defeated_const' of 'constval'
   dout <= '0';

   -- ModuleWare code(v1.12) for instance 'simulation_ends' of 'constval'
   simulation_ends <= '1';

   -- ModuleWare code(v1.12) for instance 'U_2' of 'mux'

   -- Instance port mappings.
   U_0 : write_sequencer
      PORT MAP (
         alien_defeated => dout,
         clk            => clk,
         rst_n          => rst_n,
         write_ready    => write_ready,
         enable         => enable,
         frame_done     => wr_done,
         gun_px_idx     => gun_px_idx,
         module_select  => module_select,
         write          => write
      );
   U_1 : wr_seq_tester
      PORT MAP (
         enable          => enable,
         wr_done         => wr_done,
         write           => write,
         clk             => clk,
         rst_n           => rst_n,
         write_ready     => write_ready,
         simulation_ends => simulation_ends
      );

END struct;
